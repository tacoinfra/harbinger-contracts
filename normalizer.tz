parameter (or (pair %get string (contract (pair string (pair timestamp nat)))) (big_map %update string (pair timestamp (pair timestamp (pair nat (pair nat (pair nat (pair nat nat))))))));
storage   (pair (pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        # == get ==
        # compute_normalizer_146 = sp.local("compute_normalizer_146", sp.fst(params)) # @parameter%get : @storage
        DUP;        # @parameter%get : @parameter%get : @storage
        CAR;        # string : @parameter%get : @storage
        SWAP;       # @parameter%get : string : @storage
        # compute_normalizer_147 = sp.local("compute_normalizer_147", sp.snd(params)) # @parameter%get : string : @storage
        CDR;        # contract (pair string (pair timestamp nat)) : string : @storage
        # sp.verify(self.data.assetMap.contains(compute_normalizer_146.value), 'bad request') # contract (pair string (pair timestamp nat)) : string : @storage
        DUP 3;      # @storage : contract (pair string (pair timestamp nat)) : string : @storage
        CAR;        # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : contract (pair string (pair timestamp nat)) : string : @storage
        CDR;        # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : contract (pair string (pair timestamp nat)) : string : @storage
        DUP 3;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : contract (pair string (pair timestamp nat)) : string : @storage
        MEM;        # bool : contract (pair string (pair timestamp nat)) : string : @storage
        IF
          {}
          {
            PUSH string "bad request"; # string : contract (pair string (pair timestamp nat)) : string : @storage
            FAILWITH;   # FAILED
          }; # contract (pair string (pair timestamp nat)) : string : @storage
        # sp.transfer((compute_normalizer_146.value, (self.data.assetMap[compute_normalizer_146.value].lastUpdateTime, self.data.assetMap[compute_normalizer_146.value].computedPrice)), sp.tez(0), compute_normalizer_147.value) # contract (pair string (pair timestamp nat)) : string : @storage
        NIL operation; # list operation : contract (pair string (pair timestamp nat)) : string : @storage
        SWAP;       # contract (pair string (pair timestamp nat)) : list operation : string : @storage
        PUSH mutez 0; # mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        DUP 5;      # @storage : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CAR;        # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CDR;        # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        DUP 5;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        GET;        # option (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        IF_NONE
          {
            PUSH int 156; # int : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
            FAILWITH;   # FAILED
          }
          {
            # of_some: Get-item:156 # @some : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
          }; # @some : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CAR;        # pair (nat %computedPrice) (timestamp %lastUpdateTime) : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CAR;        # nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        DUP 6;      # @storage : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CAR;        # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CDR;        # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        DUP 6;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        GET;        # option (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        IF_NONE
          {
            PUSH int 156; # int : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
            FAILWITH;   # FAILED
          }
          {
            # of_some: Get-item:156 # @some : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
          }; # @some : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CAR;        # pair (nat %computedPrice) (timestamp %lastUpdateTime) : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        CDR;        # timestamp : nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        PAIR;       # pair timestamp nat : mutez : contract (pair string (pair timestamp nat)) : list operation : string : @storage
        DIG 4;      # string : pair timestamp nat : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        PAIR;       # pair string (pair timestamp nat) : mutez : contract (pair string (pair timestamp nat)) : list operation : @storage
        TRANSFER_TOKENS; # operation : list operation : @storage
        CONS;       # list operation : @storage
      }
      {
        SWAP;       # @storage : @parameter%update
        # == update ==
        # sp.verify(sp.sender == self.data.oracleContract, 'bad sender') # @storage : @parameter%update
        DUP;        # @storage : @storage : @parameter%update
        DUG 2;      # @storage : @parameter%update : @storage
        GET 4;      # address : @parameter%update : @storage
        SENDER;     # @sender : address : @parameter%update : @storage
        COMPARE;    # int : @parameter%update : @storage
        EQ;         # bool : @parameter%update : @storage
        IF
          {}
          {
            PUSH string "bad sender"; # string : @parameter%update : @storage
            FAILWITH;   # FAILED
          }; # @parameter%update : @storage
        SWAP;       # @storage : @parameter%update
        # for assetCode in self.data.assetCodes: ... # @storage : @parameter%update
        DUP;        # @storage : @storage : @parameter%update
        DUG 2;      # @storage : @parameter%update : @storage
        CAR;        # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : @parameter%update : @storage
        CAR;        # list string : @parameter%update : @storage
        ITER
          {
            SWAP;       # @parameter%update : string : @storage
            # if params.contains(assetCode): # @parameter%update : string : @storage
            DUP;        # @parameter%update : @parameter%update : string : @storage
            DUG 2;      # @parameter%update : string : @parameter%update : @storage
            SWAP;       # string : @parameter%update : @parameter%update : @storage
            DUP;        # string : string : @parameter%update : @parameter%update : @storage
            DUG 2;      # string : @parameter%update : string : @parameter%update : @storage
            MEM;        # bool : string : @parameter%update : @storage
            IF
              {
                SWAP;       # @parameter%update : string : @storage
                # compute_normalizer_93 = sp.local("compute_normalizer_93", sp.fst(params[assetCode])) # @parameter%update : string : @storage
                DUP;        # @parameter%update : @parameter%update : string : @storage
                DUG 2;      # @parameter%update : string : @parameter%update : @storage
                SWAP;       # string : @parameter%update : @parameter%update : @storage
                DUP;        # string : string : @parameter%update : @parameter%update : @storage
                DUG 2;      # string : @parameter%update : string : @parameter%update : @storage
                GET;        # option (pair timestamp (pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))))) : string : @parameter%update : @storage
                IF_NONE
                  {
                    PUSH int 90; # int : string : @parameter%update : @storage
                    FAILWITH;   # FAILED
                  }
                  {
                    # of_some: Get-item:90 # @some : string : @parameter%update : @storage
                  }; # @some : string : @parameter%update : @storage
                CAR;        # timestamp : string : @parameter%update : @storage
                # if compute_normalizer_93.value > self.data.assetMap[assetCode].lastUpdateTime: # timestamp : string : @parameter%update : @storage
                DUP 4;      # @storage : timestamp : string : @parameter%update : @storage
                CAR;        # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : timestamp : string : @parameter%update : @storage
                CDR;        # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : string : @parameter%update : @storage
                DUP 3;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : string : @parameter%update : @storage
                GET;        # option (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : string : @parameter%update : @storage
                IF_NONE
                  {
                    PUSH int 94; # int : timestamp : string : @parameter%update : @storage
                    FAILWITH;   # FAILED
                  }
                  {
                    # of_some: Get-item:94 # @some : timestamp : string : @parameter%update : @storage
                  }; # @some : timestamp : string : @parameter%update : @storage
                CAR;        # pair (nat %computedPrice) (timestamp %lastUpdateTime) : timestamp : string : @parameter%update : @storage
                CDR;        # timestamp : timestamp : string : @parameter%update : @storage
                SWAP;       # timestamp : timestamp : string : @parameter%update : @storage
                DUP;        # timestamp : timestamp : timestamp : string : @parameter%update : @storage
                DUG 2;      # timestamp : timestamp : timestamp : string : @parameter%update : @storage
                COMPARE;    # int : timestamp : string : @parameter%update : @storage
                GT;         # bool : timestamp : string : @parameter%update : @storage
                IF
                  {
                    # compute_normalizer_96 = sp.local("compute_normalizer_96", sp.snd(params[assetCode])) # timestamp : string : @parameter%update : @storage
                    DUP 3;      # @parameter%update : timestamp : string : @parameter%update : @storage
                    DUP 3;      # string : @parameter%update : timestamp : string : @parameter%update : @storage
                    GET;        # option (pair timestamp (pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))))) : timestamp : string : @parameter%update : @storage
                    IF_NONE
                      {
                        PUSH int 90; # int : timestamp : string : @parameter%update : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        # of_some: Get-item:90 # @some : timestamp : string : @parameter%update : @storage
                      }; # @some : timestamp : string : @parameter%update : @storage
                    CDR;        # pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    # compute_normalizer_97 = sp.local("compute_normalizer_97", sp.snd(compute_normalizer_96.value)) # pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CDR;        # pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    # compute_normalizer_98 = sp.local("compute_normalizer_98", sp.snd(compute_normalizer_97.value)) # pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair nat (pair nat (pair nat (pair nat nat))) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CDR;        # pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    # compute_normalizer_99 = sp.local("compute_normalizer_99", sp.snd(compute_normalizer_98.value)) # pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CDR;        # pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    # compute_normalizer_100 = sp.local("compute_normalizer_100", sp.snd(compute_normalizer_99.value)) # pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # pair nat (pair nat nat) : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CDR;        # pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    # compute_normalizer_102 = sp.local("compute_normalizer_102", sp.fst(compute_normalizer_98.value)) # pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP 3;      # pair nat (pair nat (pair nat nat)) : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CAR;        # nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    # compute_normalizer_103 = sp.local("compute_normalizer_103", sp.fst(compute_normalizer_99.value)) # nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP 3;      # pair nat (pair nat nat) : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CAR;        # nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    # compute_normalizer_104 = sp.local("compute_normalizer_104", sp.fst(compute_normalizer_100.value)) # nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP 3;      # pair nat nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CAR;        # nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    # compute_normalizer_105 = sp.local("compute_normalizer_105", sp.snd(compute_normalizer_100.value)) # nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP 4;      # pair nat nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    CDR;        # nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    # if compute_normalizer_105.value > 0: # nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    DUP;        # nat : nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    PUSH nat 0; # nat : nat : nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    COMPARE;    # int : nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    LT;         # bool : nat : nat : nat : nat : pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                    IF
                      {
                        DIG 4;      # pair nat nat : nat : nat : nat : nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DROP;       # nat : nat : nat : nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DIG 4;      # pair nat (pair nat nat) : nat : nat : nat : nat : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DROP;       # nat : nat : nat : nat : pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DIG 4;      # pair nat (pair nat (pair nat nat)) : nat : nat : nat : nat : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DROP;       # nat : nat : nat : nat : pair nat (pair nat (pair nat (pair nat nat))) : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DIG 4;      # pair nat (pair nat (pair nat (pair nat nat))) : nat : nat : nat : nat : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DROP;       # nat : nat : nat : nat : pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : timestamp : string : @parameter%update : @storage
                        DIG 4;      # pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : nat : nat : nat : nat : timestamp : string : @parameter%update : @storage
                        DROP;       # nat : nat : nat : nat : timestamp : string : @parameter%update : @storage
                        # self.data.assetMap[assetCode].lastUpdateTime = compute_normalizer_93.value # nat : nat : nat : nat : timestamp : string : @parameter%update : @storage
                        DIG 7;      # @storage : nat : nat : nat : nat : timestamp : string : @parameter%update
                        UNPAIR;     # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        UNPAIR;     # list string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        SWAP;       # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DUP;        # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DUP 10;     # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DUG 2;      # string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        GET;        # option (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        IF_NONE
                          {
                            PUSH int 114; # int : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        UNPAIR;     # pair (nat %computedPrice) (timestamp %lastUpdateTime) : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        CAR;        # nat : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : timestamp : string : @parameter%update
                        DIG 10;     # timestamp : nat : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair nat timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        # self.data.assetMap[assetCode].prices.last += 1 # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP 9;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        IF_NONE
                          {
                            PUSH int 22; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UNPAIR;     # pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UNPAIR;     # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PUSH int 1; # int : int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        ADD;        # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair int int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UPDATE 3;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        # self.data.assetMap[assetCode].prices.sum += (((compute_normalizer_102.value + compute_normalizer_103.value) + compute_normalizer_104.value) // 3) * compute_normalizer_105.value # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP 9;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        IF_NONE
                          {
                            PUSH int 23; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        GET 4;      # nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP 8;      # nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PUSH nat 3; # nat : nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP 11;     # nat : nat : nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP 13;     # nat : nat : nat : nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        DUP 15;     # nat : nat : nat : nat : nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        ADD;        # nat : nat : nat : nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        ADD;        # nat : nat : nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        EDIV;       # option (pair nat nat) : nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        IF_NONE
                          {
                            PUSH int 111; # int : nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }
                          {
                            CAR;        # nat : nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                          }; # nat : nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        MUL;        # nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        ADD;        # nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UPDATE 4;   # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UPDATE 3;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        # self.data.assetMap[assetCode].prices.saved[self.data.assetMap[assetCode].prices.last] = (((compute_normalizer_102.value + compute_normalizer_103.value) + compute_normalizer_104.value) // 3) * compute_normalizer_105.value # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update
                        DUG 7;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        UNPAIR;     # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        UNPAIR;     # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 9;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_NONE
                          {
                            PUSH int 24; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET 3;      # map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 8;      # nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        PUSH nat 3; # nat : nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 10;     # nat : nat : nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 11;     # nat : nat : nat : nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 12;     # nat : nat : nat : nat : nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        ADD;        # nat : nat : nat : nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        ADD;        # nat : nat : nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        EDIV;       # option (pair nat nat) : nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_NONE
                          {
                            PUSH int 111; # int : nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }
                          {
                            CAR;        # nat : nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                          }; # nat : nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        MUL;        # nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SOME;       # option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 11;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP 11;     # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        IF_NONE
                          {
                            PUSH int 117; # int : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:117 # @some : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                          }; # @some : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CAR;        # pair (int %first) (int %last) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        CDR;        # int : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE;     # map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE 3;   # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE 3;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        # self.data.assetMap[assetCode].volumes.last += 1 # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        IF_NONE
                          {
                            PUSH int 22; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        GET 4;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UNPAIR;     # pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UNPAIR;     # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PUSH int 1; # int : int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        ADD;        # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair int int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE 4;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        # self.data.assetMap[assetCode].volumes.sum += compute_normalizer_105.value # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        IF_NONE
                          {
                            PUSH int 23; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        GET 4;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        GET 4;      # nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        DUP 8;      # nat : nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        ADD;        # nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE 4;   # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE 4;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        # self.data.assetMap[assetCode].volumes.saved[self.data.assetMap[assetCode].volumes.last] = compute_normalizer_105.value # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update
                        DUG 4;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        UNPAIR;     # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        UNPAIR;     # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 6;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_NONE
                          {
                            PUSH int 24; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET 4;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET 3;      # map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : nat : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 7;      # nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SOME;       # option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 10;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        DUP 10;     # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        IF_NONE
                          {
                            PUSH int 118; # int : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:118 # @some : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                          }; # @some : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        GET 5;      # pair (int %first) (int %last) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        CDR;        # int : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        UPDATE;     # map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        UPDATE 3;   # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        UPDATE 4;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                        # if ((self.data.assetMap[assetCode].prices.last - self.data.assetMap[assetCode].prices.first) + 1) > self.data.numDataPoints: # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                        DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                        DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET 3;      # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        PUSH int 1; # int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 5;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 4;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_NONE
                          {
                            PUSH int 121; # int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:121 # @some : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                          }; # @some : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair (int %first) (int %last) : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 6;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_NONE
                          {
                            PUSH int 121; # int : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:121 # @some : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                          }; # @some : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair (int %first) (int %last) : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # int : int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SUB;        # int : int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        ADD;        # int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        COMPARE;    # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GT;         # bool : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF
                          {
                            # sp.verify(self.data.assetMap[assetCode].prices.first < self.data.assetMap[assetCode].prices.last) # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 122; # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:122 # @some : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                              }; # @some : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (int %first) (int %last) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 4;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 3;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 122; # int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:122 # @some : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                              }; # @some : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (int %first) (int %last) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            COMPARE;    # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            LT;         # bool : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF
                              {}
                              {
                                PUSH string "WrongCondition: self.data.assetMap[assetCode].prices.first < self.data.assetMap[assetCode].prices.last"; # string : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            # self.data.assetMap[assetCode].prices.sum = sp.as_nat(self.data.assetMap[assetCode].prices.sum - self.data.assetMap[assetCode].prices.saved[self.data.assetMap[assetCode].prices.first]) # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            UNPAIR;     # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            UNPAIR;     # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 16; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 9;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 8;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 122; # int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:122 # @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                              }; # @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 3;      # map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 10;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 9;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 122; # int : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:122 # @some : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                              }; # @some : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (int %first) (int %last) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # int : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 16; # int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:16 # @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                              }; # @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 9;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP 9;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_NONE
                              {
                                PUSH int 122; # int : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:122 # @some : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                              }; # @some : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET 4;      # nat : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SUB;        # int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            ISNAT;      # option nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_NONE
                              {
                                PUSH int 16; # int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE 4;   # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE 3;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            # del self.data.assetMap[assetCode].prices.saved[self.data.assetMap[assetCode].prices.first] # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            UNPAIR;     # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            UNPAIR;     # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 17; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 3;      # map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            NONE nat;   # option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 10;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP 10;     # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_NONE
                              {
                                PUSH int 122; # int : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:122 # @some : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                              }; # @some : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair (int %first) (int %last) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # int : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE 3;   # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE 3;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            # self.data.assetMap[assetCode].prices.first += 1 # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_NONE
                              {
                                PUSH int 18; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UNPAIR;     # pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UNPAIR;     # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PUSH int 1; # int : int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            ADD;        # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair int int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE 3;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            # sp.verify(self.data.assetMap[assetCode].volumes.first < self.data.assetMap[assetCode].volumes.last) # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 123; # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:123 # @some : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                              }; # @some : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 5;      # pair (int %first) (int %last) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 4;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 3;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 123; # int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:123 # @some : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                              }; # @some : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 5;      # pair (int %first) (int %last) : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # int : int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            COMPARE;    # int : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            LT;         # bool : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF
                              {}
                              {
                                PUSH string "WrongCondition: self.data.assetMap[assetCode].volumes.first < self.data.assetMap[assetCode].volumes.last"; # string : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }; # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            # self.data.assetMap[assetCode].volumes.sum = sp.as_nat(self.data.assetMap[assetCode].volumes.sum - self.data.assetMap[assetCode].volumes.saved[self.data.assetMap[assetCode].volumes.first]) # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            UNPAIR;     # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            UNPAIR;     # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 16; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 4;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 9;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 8;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 123; # int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:123 # @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                              }; # @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 7;      # map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 10;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 9;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 123; # int : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:123 # @some : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                              }; # @some : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 5;      # pair (int %first) (int %last) : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            CAR;        # int : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 16; # int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:16 # @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                              }; # @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 9;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP 9;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_NONE
                              {
                                PUSH int 123; # int : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:123 # @some : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                              }; # @some : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET 8;      # nat : @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SUB;        # int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            ISNAT;      # option nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_NONE
                              {
                                PUSH int 16; # int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE 4;   # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE 4;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            # del self.data.assetMap[assetCode].volumes.saved[self.data.assetMap[assetCode].volumes.first] # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUP;        # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            UNPAIR;     # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            UNPAIR;     # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            SWAP;       # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            IF_NONE
                              {
                                PUSH int 17; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 4;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DUP;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            GET 3;      # map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            NONE nat;   # option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            DIG 10;     # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP 10;     # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_NONE
                              {
                                PUSH int 123; # int : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }
                              {
                                # of_some: Get-item:123 # @some : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                              }; # @some : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET 5;      # pair (int %first) (int %last) : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            CAR;        # int : option nat : map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # map int nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE 3;   # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE 4;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            # self.data.assetMap[assetCode].volumes.first += 1 # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            IF_NONE
                              {
                                PUSH int 18; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            DUP;        # @some : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            GET 4;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UNPAIR;     # pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UNPAIR;     # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PUSH int 1; # int : int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            ADD;        # int : int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair int int : pair (map %saved int nat) (nat %sum) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE 4;   # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                            PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update
                            DUG 2;      # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                          }
                          {}; # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        # self.data.assetMap[assetCode].computedPrice = self.data.assetMap[assetCode].prices.sum // self.data.assetMap[assetCode].volumes.sum # string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 3;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        UNPAIR;     # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        UNPAIR;     # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        SWAP;       # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 5;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP;        # string : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUG 2;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_NONE
                          {
                            PUSH int 126; # int : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        UNPAIR;     # pair nat timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 9;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DUP 8;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        IF_NONE
                          {
                            PUSH int 126; # int : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:126 # @some : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                          }; # @some : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        GET 8;      # nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                        DIG 9;      # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        CAR;        # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        CDR;        # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : string : @parameter%update
                        DIG 8;      # string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        GET;        # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        IF_NONE
                          {
                            PUSH int 126; # int : nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                            FAILWITH;   # FAILED
                          }
                          {
                            # of_some: Get-item:126 # @some : nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                          }; # @some : nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        GET 3;      # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        GET 4;      # nat : nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        EDIV;       # option (pair nat nat) : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        IF_NONE
                          {
                            PUSH int 126; # int : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                            FAILWITH;   # FAILED
                          }
                          {
                            CAR;        # nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                          }; # nat : timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        PAIR;       # pair nat timestamp : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        PAIR;       # pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        SOME;       # option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        SWAP;       # string : option (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        UPDATE;     # big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : list string : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        SWAP;       # list string : big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        PAIR;       # pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : pair (int %numDataPoints) (address %oracleContract) : @parameter%update
                        PAIR;       # pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract)) : @parameter%update
                        SWAP;       # @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                      }
                      {
                        DROP 11;    # @parameter%update : @storage
                      }; # @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
                  }
                  {
                    DROP 2;     # @parameter%update : @storage
                  }; # @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
              }
              {
                DROP;       # @parameter%update : @storage
              }; # @parameter%update : pair (pair (list string) (big_map string (pair (pair nat timestamp) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))))) (pair (int %numDataPoints) (address %oracleContract))
          }; # @parameter%update : @storage
        DROP;       # @storage
        NIL operation; # list operation : @storage
      }; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };
view
  "getPrice" string (pair timestamp nat)
  {
    UNPAIR;     # @parameter : @storage
    SWAP;       # @storage : @parameter
    # sp.verify(self.data.assetMap.contains(params), 'bad request') # @storage : @parameter
    DUP;        # @storage : @storage : @parameter
    DUG 2;      # @storage : @parameter : @storage
    CAR;        # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : @parameter : @storage
    CDR;        # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @parameter : @storage
    SWAP;       # @parameter : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @storage
    DUP;        # @parameter : @parameter : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @storage
    DUG 2;      # @parameter : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @parameter : @storage
    MEM;        # bool : @parameter : @storage
    IF
      {}
      {
        PUSH string "bad request"; # string : @parameter : @storage
        FAILWITH;   # FAILED
      }; # @parameter : @storage
    SWAP;       # @storage : @parameter
    # sp.result((self.data.assetMap[params].lastUpdateTime, self.data.assetMap[params].computedPrice)) # @storage : @parameter
    DUP;        # @storage : @storage : @parameter
    DUG 2;      # @storage : @parameter : @storage
    CAR;        # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : @parameter : @storage
    CDR;        # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @parameter : @storage
    SWAP;       # @parameter : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @storage
    DUP;        # @parameter : @parameter : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @storage
    DUG 2;      # @parameter : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @parameter : @storage
    GET;        # option (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @parameter : @storage
    IF_NONE
      {
        PUSH int 184; # int : @parameter : @storage
        FAILWITH;   # FAILED
      }
      {
        # of_some: Get-item:184 # @some : @parameter : @storage
      }; # @some : @parameter : @storage
    CAR;        # pair (nat %computedPrice) (timestamp %lastUpdateTime) : @parameter : @storage
    CAR;        # nat : @parameter : @storage
    DIG 2;      # @storage : nat : @parameter
    CAR;        # pair (list %assetCodes string) (big_map %assetMap string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))) : nat : @parameter
    CDR;        # big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : @parameter
    DIG 2;      # @parameter : big_map string (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat
    GET;        # option (pair (pair (nat %computedPrice) (timestamp %lastUpdateTime)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat
    IF_NONE
      {
        PUSH int 184; # int : nat
        FAILWITH;   # FAILED
      }
      {
        # of_some: Get-item:184 # @some : nat
      }; # @some : nat
    CAR;        # pair (nat %computedPrice) (timestamp %lastUpdateTime) : nat
    CDR;        # timestamp : nat
    PAIR;       # pair timestamp nat
  };